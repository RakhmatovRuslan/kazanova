package com.javacodegeeks.drools;
import com.javacodegeeks.drools.comparator.LibrarySorter;
import com.javacodegeeks.drools.enums.Features;
import java.util.Scanner;
import com.javacodegeeks.drools.libraries.Library;
import com.javacodegeeks.drools.tasks.JsonParserTask;
import com.javacodegeeks.drools.enums.DataType;


global java.util.List<Library> jsonParserLibraries;

rule "Json parser library is choosen by total_points rule"
no-loop
when jsonParser : JsonParserTask( featurePriority == Features.NONE)
then
    LibrarySorter.sortByPerformanceDesc(jsonParserLibraries);
    jsonParser.setLibrary((Library)jsonParserLibraries.get(0));
    jsonParser.setReason("");
    update(jsonParser);
end

rule "Json parser library is choosen by size rule"
no-loop
when jsonParser : JsonParserTask( featurePriority == Features.SIZE)
then
    LibrarySorter.sortBySizeDesc(jsonParserLibraries);
    jsonParser.setLibrary((Library) jsonParserLibraries.get(0));
    update(jsonParser);
    System.out.println("Library for the jsonParser is - "+ jsonParser.getLibrary());
end


rule "Json parser library is choosen by big data processing performance rule"
no-loop
when jsonParser : JsonParserTask( featurePriority == Features.PERFORMANCE && dataType == DataType.BIG_DATA)
then
    LibrarySorter.sortByJsonBigDataPerDesc(jsonParserLibraries);
    jsonParser.setLibrary((Library)jsonParserLibraries.get(0));
    update(jsonParser);
    System.out.println("Library for the jsonParser is - "+ jsonParser.getLibrary());
end

rule "Json parser library is choosen by small data processing performance rule"
no-loop
when jsonParser : JsonParserTask( featurePriority == Features.PERFORMANCE && dataType == DataType.SMALL_DATA)
then
    LibrarySorter.sortByJsonSmallDataPerDesc(jsonParserLibraries);
    jsonParser.setLibrary((Library)jsonParserLibraries.get(0));
    update(jsonParser);
    System.out.println("Library for the jsonParser is - "+ jsonParser.getLibrary());
end
