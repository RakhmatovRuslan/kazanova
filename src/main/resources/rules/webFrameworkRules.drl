import com.javacodegeeks.drools.tasks.WebFrameworkTask;
import com.javacodegeeks.drools.enums.Features;
import com.javacodegeeks.drools.frameworks.Framework;
import com.javacodegeeks.drools.comparator.FrameworkSorter;
import com.javacodegeeks.drools.enums.WebApplicationType;
import java.util.List
import com.javacodegeeks.drools.frameworks.Framework
import com.javacodegeeks.drools.frameworks.WebFramework;

global List<Framework> webFrameworkList;

rule "Overall features rule"
no-loop
when webFrameworkTask: WebFrameworkTask(featurePriority == Features.NONE)
then
      FrameworkSorter.sortByOverallFeatures(webFrameworkList);
      webFrameworkTask.setFramework((WebFramework) webFrameworkList.get(0));
      System.out.println("The appropriate web framework is "+webFrameworkTask.getFramework());
end

rule "Rapid application development feature rule"
no-loop
when webFrameworkTask: WebFrameworkTask(featurePriority == Features.RAPID_APPLICATION_DEVELOPMENT && webApplicationType == WebApplicationType.NONE)
then
      FrameworkSorter.sortByRapidAppDevFeature(webFrameworkList);
      webFrameworkTask.setFramework((WebFramework) webFrameworkList.get(0));
      System.out.println("The appropriate web framework is "+webFrameworkTask.getFramework());
end

rule "Complexity feature rule"
no-loop
when webFrameworkTask: WebFrameworkTask(featurePriority == Features.COMPLEXITY && webApplicationType == WebApplicationType.NONE)
then
    FrameworkSorter.sortByComplexityFeature(webFrameworkList);
    webFrameworkTask.setFramework((WebFramework) webFrameworkList.get(0));
    System.out.println("The appropriate web framework is "+webFrameworkTask.getFramework());
 end

rule "Ease of use feature rule"
no-loop
when webFrameworkTask: WebFrameworkTask(featurePriority == Features.EASE_OF_USE && webApplicationType == WebApplicationType.NONE)
then
    FrameworkSorter.sortByEaseOfUseFeature(webFrameworkList);
    webFrameworkTask.setFramework((WebFramework) webFrameworkList.get(0));
    System.out.println("The appropriate web framework is "+webFrameworkTask.getFramework());
 end

rule "Documentation and community feature rule"
no-loop
when webFrameworkTask: WebFrameworkTask(featurePriority == Features.DOCUMENTATION_COMMUNITY && webApplicationType == WebApplicationType.NONE)
then
    FrameworkSorter.sortByDocAndCommunityFeature(webFrameworkList);
    webFrameworkTask.setFramework((WebFramework) webFrameworkList.get(0));
    System.out.println("The appropriate web framework is "+webFrameworkTask.getFramework());
end

rule "Ecosystem feature rule"
no-loop
when webFrameworkTask: WebFrameworkTask(featurePriority == Features.ECOSYSTEM && webApplicationType == WebApplicationType.NONE)
then
    FrameworkSorter.sortByEcosystemFeature(webFrameworkList);
    webFrameworkTask.setFramework((WebFramework) webFrameworkList.get(0));
    System.out.println("The appropriate web framework is "+webFrameworkTask.getFramework());
end

rule "Scalability feature rule"
no-loop
when webFrameworkTask: WebFrameworkTask(featurePriority == Features.SCALABILITY && webApplicationType == WebApplicationType.NONE)
then
    FrameworkSorter.sortByScalabilityFeature(webFrameworkList);
    webFrameworkTask.setFramework((WebFramework) webFrameworkList.get(0));
    System.out.println("The appropriate web framework is "+webFrameworkTask.getFramework());
end

rule "Code feature rule"
no-loop
when webFrameworkTask: WebFrameworkTask(featurePriority == Features.CODE && webApplicationType == WebApplicationType.NONE)
then
    FrameworkSorter.sortByCodeFeature(webFrameworkList);
    webFrameworkTask.setFramework((WebFramework) webFrameworkList.get(0));
    System.out.println("The appropriate web framework is "+webFrameworkTask.getFramework());
end

rule "Look and Feel feature rule"
no-loop
when webFrameworkTask: WebFrameworkTask(featurePriority == Features.LOOK_FEEL && webApplicationType == WebApplicationType.NONE)
then
    FrameworkSorter.sortByLookAndFeelFeature(webFrameworkList);
    webFrameworkTask.setFramework((WebFramework) webFrameworkList.get(0));
    System.out.println("The appropriate web framework is "+webFrameworkTask.getFramework());
end

//=================================================================================================

rule "Rapid application development feature by web application type rule"
no-loop
when webFrameworkTask: WebFrameworkTask(featurePriority == Features.RAPID_APPLICATION_DEVELOPMENT && webApplicationType != WebApplicationType.NONE)
then
      List<Framework> webFrameWorks =  FrameworkSorter.getWebFrameworksByType(webFrameworkList,webFrameworkTask.getWebApplicationType());
      FrameworkSorter.sortByRapidAppDevFeature(webFrameWorks);
      webFrameworkTask.setFramework((WebFramework) webFrameWorks.get(0));
      System.out.println("The appropriate web framework is "+webFrameworkTask.getFramework());
end

rule "Complexity feature by web application type rule"
no-loop
when webFrameworkTask: WebFrameworkTask(featurePriority == Features.COMPLEXITY && webApplicationType != WebApplicationType.NONE)
then
    List<Framework> webFrameWorks =  FrameworkSorter.getWebFrameworksByType(webFrameworkList,webFrameworkTask.getWebApplicationType());
    FrameworkSorter.sortByComplexityFeature(webFrameWorks);
    webFrameworkTask.setFramework((WebFramework) webFrameWorks.get(0));
    System.out.println("The appropriate web framework is "+webFrameworkTask.getFramework());
 end

rule "Ease of use feature by web application type rule"
no-loop
when webFrameworkTask: WebFrameworkTask(featurePriority == Features.EASE_OF_USE && webApplicationType != WebApplicationType.NONE)
then
    List<Framework> webFrameWorks =  FrameworkSorter.getWebFrameworksByType(webFrameworkList,webFrameworkTask.getWebApplicationType());
    FrameworkSorter.sortByEaseOfUseFeature(webFrameWorks);
    webFrameworkTask.setFramework((WebFramework) webFrameWorks.get(0));
    System.out.println("The appropriate web framework is "+webFrameworkTask.getFramework());
 end

rule "Documentation and community feature by web application type rule"
no-loop
when webFrameworkTask: WebFrameworkTask(featurePriority == Features.DOCUMENTATION_COMMUNITY && webApplicationType != WebApplicationType.NONE)
then
    List<Framework> webFrameWorks =  FrameworkSorter.getWebFrameworksByType(webFrameworkList,webFrameworkTask.getWebApplicationType());
    FrameworkSorter.sortByDocAndCommunityFeature(webFrameWorks);
    webFrameworkTask.setFramework((WebFramework) webFrameWorks.get(0));
    System.out.println("The appropriate web framework is "+webFrameworkTask.getFramework());
end

rule "Ecosystem feature by web application type rule"
no-loop
when webFrameworkTask: WebFrameworkTask(featurePriority == Features.ECOSYSTEM && webApplicationType != WebApplicationType.NONE)
then
    List<Framework> webFrameWorks =  FrameworkSorter.getWebFrameworksByType(webFrameworkList,webFrameworkTask.getWebApplicationType());
    FrameworkSorter.sortByEcosystemFeature(webFrameWorks);
    webFrameworkTask.setFramework((WebFramework) webFrameWorks.get(0));
    System.out.println("The appropriate web framework is "+webFrameworkTask.getFramework());
end

rule "Scalability feature by web application type rule"
no-loop
when webFrameworkTask: WebFrameworkTask(featurePriority == Features.SCALABILITY && webApplicationType != WebApplicationType.NONE)
then
    List<Framework> webFrameWorks =  FrameworkSorter.getWebFrameworksByType(webFrameworkList,webFrameworkTask.getWebApplicationType());
    FrameworkSorter.sortByScalabilityFeature(webFrameWorks);
    webFrameworkTask.setFramework((WebFramework) webFrameWorks.get(0));
    System.out.println("The appropriate web framework is "+webFrameworkTask.getFramework());
end

rule "Code feature by web application type rule"
no-loop
when webFrameworkTask: WebFrameworkTask(featurePriority == Features.CODE && webApplicationType != WebApplicationType.NONE)
then
    List<Framework> webFrameWorks =  FrameworkSorter.getWebFrameworksByType(webFrameworkList,webFrameworkTask.getWebApplicationType());
    FrameworkSorter.sortByCodeFeature(webFrameWorks);
    webFrameworkTask.setFramework((WebFramework) webFrameWorks.get(0));
    System.out.println("The appropriate web framework is "+webFrameworkTask.getFramework());
end

rule "Look and Feel feature by web application type rule"
no-loop
when webFrameworkTask: WebFrameworkTask(featurePriority == Features.LOOK_FEEL && webApplicationType != WebApplicationType.NONE)
then
    List<Framework> webFrameWorks =  FrameworkSorter.getWebFrameworksByType(webFrameworkList,webFrameworkTask.getWebApplicationType());
    FrameworkSorter.sortByLookAndFeelFeature(webFrameWorks);
    webFrameworkTask.setFramework((WebFramework) webFrameWorks.get(0));
    System.out.println("The appropriate web framework is "+webFrameworkTask.getFramework());
end